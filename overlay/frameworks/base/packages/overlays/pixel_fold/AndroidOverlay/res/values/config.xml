<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2023, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- this is important so guest knows we have two displays-->
    <string-array name="config_displayUniqueIdArray" translatable="false">
        <item>"local:4619827259835644672"</item>
        <item>"local:4619827551948147201"</item>
    </string-array>

   <!-- Whether the display cutout region of the secondary built-in display should be forced to
        black in software (to avoid aliasing or emulate a cutout that is not physically existent).
    -->
    <bool name="config_fillSecondaryBuiltInDisplayCutout">true</bool>

    <!-- Display cutout configuration -->
    <string translatable="false" name="config_secondaryBuiltInDisplayCutout">
        M 505,61
        a 35,35 0 1 0 70,0 35,35 0 1 0 -70,0
        Z
        @left
    </string>

    <string translatable="false" name="config_secondaryBuiltInDisplayCutoutRectApproximation">
        M 480,0
        h 110
        v 110
        h -110
        Z
        @left
    </string>

    <!-- WindowsManager JetPack display features -->
    <string name="config_display_features" translatable="false">fold-[1104,0,1104,1848]</string>

    <!-- Map of DeviceState to rotation lock setting. Each entry must be in the format "key:value",
         or "key:value:fallback_key" for example: "0:1" or "2:0:1". The keys are device states, and
         the values are one of Settings.Secure.DeviceStateRotationLockSetting.
         The fallback is a key to a device state that can be specified when the value is
         Settings.Secure.DEVICE_STATE_ROTATION_LOCK_IGNORED.
     -->
    <string-array name="config_perDeviceStateRotationLockDefaults" translatable="false">
        <item>0:1</item> <!-- CLOSED -> LOCKED -->
        <item>2:0:1</item> <!-- HALF_OPENED -> IGNORED and fallback to device state OPENED -->
        <item>1:2</item> <!-- OPENED -> UNLOCKED -->
    </string-array>

    <!-- Map of System DeviceState supplied by DeviceStateManager to WM Jetpack posture. -->
    <string-array name="config_device_state_postures" translatable="false">
        <item>0:1</item> <!-- CLOSED -->
        <item>1:2</item> <!-- HALF_OPENED -->
        <item>2:3</item> <!-- OPENED -->
        <item>3:1</item> <!-- FLIPPED -->
    </string-array>

    <!-- The device states (supplied by DeviceStateManager) that should be treated as open by the
         display fold controller. -->
    <integer-array name="config_openDeviceStates" translatable="false">
        <item>2</item> <!-- OPEN -->
    </integer-array>

    <!-- The device states (supplied by DeviceStateManager) that should be treated as folded by the
         display fold controller. This also controls the folded bit in CameraServiceProxy. -->
    <integer-array name="config_foldedDeviceStates" translatable="false">
        <item>0</item> <!-- CLOSED -->
    </integer-array>

    <!-- The device states (supplied by DeviceStateManager) that should be treated as half folded by
         the display fold controller. This also controls the folded bit in CameraServiceProxy. -->
    <integer-array name="config_halfFoldedDeviceStates" translatable="false">
        <item>1</item> <!-- HALF_OPENED -->
    </integer-array>

    <!-- The device states (supplied by DeviceStateManager) that should be treated as a rear display
         state. Default is empty. -->
    <integer-array name="config_rearDisplayDeviceStates" translatable="false">
        <item>3</item> <!-- REAR_DISPLAY_STATE -->
    </integer-array>

    <bool name="config_supportsConcurrentInternalDisplays">false</bool>
    <bool name="config_localDisplaysMirrorContent">false</bool>
    <!-- Multi Display related -->
    <!-- Whether the system enables per-display focus. If the system has the input method for each
         display, this value should be true. -->
    <bool name="config_perDisplayFocusEnabled">true</bool>
    <!-- True if the device supports system decorations on secondary displays. -->
    <bool name="config_supportsSystemDecorsOnSecondaryDisplays">true</bool>
    <!-- This is the default launcher package with an activity to use on secondary displays that
         support system decorations.
         This launcher package must have an activity that supports multiple instances and has
         corresponding launch mode set in AndroidManifest.
         {@see android.view.Display#FLAG_SHOULD_SHOW_SYSTEM_DECORATIONS} -->

    <!-- The device states (supplied by DeviceStateManager) that should be treated as folded by the
         display fold controller. -->

</resources>
